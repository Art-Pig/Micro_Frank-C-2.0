1.参考书籍《数据结构与算法图解 (杰伊•温格罗, 袁志鹏译) 》
《数据结构与算法分析 (Weiss, Mark Allen·韦斯,韦斯) 》

以数组举例，线性查找与二分查找，要从数组（正序数组，N个元素）中查询一个数，线性查找得一个一个找最多要找N遍，而二分法仅需log2N遍

大O记法是比较算法的方法，比较二分法、线性查找，
冒泡排序，一直轮回，这也正是此种算法名为冒泡排序的原因：每一次轮回过后，未排序的值中最大的那个都会 “冒”到正确的位置上。
以下是用Python写的冒泡排序。 
def bubble_sort(list): 
    unsorted_until_index = len(list) - 1 数组长度-1，即最大的数组索引
    sorted = False //判断while循环是否结束标志
while not sorted: 
  sorted = True 
for i in range(unsorted_until_index): 
if list[i] > list[i+1]:     //如果前一个比后一个大
  sorted = False    //
  list[i], list[i+1] = list[i+1], list[i]   //那么数组元素左右调换
  unsorted_until_index = unsorted_until_index - 1 最开始元素1和2比，
list = [65, 55, 45, 35, 25, 15, 10] 
bubble_sort(list) 
print list 

冒泡排序效率也比较慢，大约是N^2次

选择排序

插入排序
大O有一条重要规则——忽略常数，于是你可能会将其简化成O(N2+ N)。 不过，现在来学习一下大O的另一条重要规则： 大O只保留最高阶的N。 






8.1 栈 
栈存储数据的方式跟数组一样，都是将元素排成一行。只不过它还有以下3条约束。 
 只能在末尾插入数据。 
 只能读取末尾的数据。 
 只能移除末尾的数据。


二叉树的查找算法先从根结点开始。 
(1) 检视该结点的值。 
(2) 如果正是所要找的值，太好了！ 
(3) 如果要找的值小于当前结点的值，则在该结点的左子树查找。 
(4) 如果要找的值大于当前结点的值，则在该结点的右子树查找。

广度优先搜索
类似于微博，微博我们可以点进一个人的关注列表，然后一步一步看到每个人的关注列表
（前提是它们开了允许陌生人查看好友关注列表的权限）


